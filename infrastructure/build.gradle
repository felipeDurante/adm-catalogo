buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:8.5.10'
    }
}

plugins {
    id("java")
    id("application")
    id("org.springframework.boot") version "2.6.7"
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.flywaydb.flyway' version '8.5.10'
}


group = "com.felipe.admin.catalogo.infrastructure"
version = "1.0-SNAPSHOT"

bootJar {
    archiveBaseName.set 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}
repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation("org.springframework.boot:spring-boot-starter-undertow")
    implementation('mysql:mysql-connector-java')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation('org.flywaydb:flyway-core')
    runtimeOnly('com.h2database:h2')
    implementation('org.springdoc:springdoc-openapi-webmvc-core:1.6.14') //interpreta o spring para gerar a documentacao
    implementation('org.springdoc:springdoc-openapi-ui:1.6.14') // especificacao open api

//    testImplementation(platform("org.junit:junit-bom:5.9.1"))
//    testImplementation("org.junit.jupiter:junit-jupiter")
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
}

tasks.test {
    useJUnitPlatform()
}